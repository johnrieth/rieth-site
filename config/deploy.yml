# Name of your application. Used to uniquely configure containers.
service: rieth_site

# Name of the container image.
image: ghcr.io/johnrieth/rieth_site

# Deploy to these servers.
servers:
  web:
    - rieth-server

# Enable SSL auto certification via Let's Encrypt and allow for multiple apps on a single web server.
proxy:
  ssl: true
  host: rieth.dev

# Credentials for your image host.
registry:
  # GitHub Container Registry
  server: ghcr.io
  username: johnrieth
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .kamal/secrets).
env:
  secret:
    - RAILS_MASTER_KEY
  clear:
    # Run the Solid Queue Supervisor inside the web server's Puma process to do jobs.
    SOLID_QUEUE_IN_PUMA: true

# Aliases for common commands
aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f
  dbc: app exec --interactive --reuse "bin/rails dbconsole"

# Use a persistent storage volume for database files and local Active Storage files.
volumes:
  - "rieth_site_storage:/rails/storage"

# Bridge fingerprinted assets, like JS and CSS, between versions
asset_path: /rails/public/assets

# Use deploy user instead of root
ssh:
  user: deploy

# Configure the image builder - use your server as builder
builder:
  arch: amd64
  remote: ssh://rieth-server
  local: false